{"ast":null,"code":"var _jsxFileName = \"/Users/mahira/repos/memory-card/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport CardGrid from \"./components/CharacterCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [apiData, setApiData] = React.useState(\"\");\n  const [characters, setCharacters] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n  useEffect(() => {\n    handleAPI();\n  }, []);\n\n  const handleAPI = () => {\n    fetch(\"https://api.jikan.moe/v4/anime/38000/characters\").then(response => response.json()).then(response => setApiData(response.data)).then(setIsLoading(false)).catch(err => setError(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: console.log(apiData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bh2RJzaUnoL63WSKkoGDbl1E0yY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","CardGrid","App","apiData","setApiData","useState","characters","setCharacters","isLoading","setIsLoading","error","setError","handleAPI","fetch","then","response","json","data","catch","err","console","log"],"sources":["/Users/mahira/repos/memory-card/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport CardGrid from \"./components/CharacterCards\";\n\nfunction App() {\n  const [apiData, setApiData] = React.useState(\"\");\n  const [characters, setCharacters] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n  useEffect(() => {\n    handleAPI();\n  }, []);\n\n  const handleAPI = () => {\n    fetch(\"https://api.jikan.moe/v4/anime/38000/characters\")\n      .then((response) => response.json())\n      .then((response) => setApiData(response.data))\n      .then(setIsLoading(false))\n      .catch((err) => setError(err));\n  };\n\n  return (\n    <div>\n      {console.log(apiData)}\n      {/* {isLoading ? (\n        <h1>loading... </h1>\n      ) : (\n        <CardGrid\n          loading={isLoading}\n          characters={characters.map((char) => {\n            return {\n              name: char.name,\n              image: char.image,\n              clicked: false,\n              id: uniqid(),\n            };\n          })}\n        />\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,KAAK,CAACM,QAAN,CAAe,EAAf,CAApC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACM,QAAN,CAAe,IAAf,CAAlC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;EAEAL,SAAS,CAAC,MAAM;IACdY,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,SAAS,GAAG,MAAM;IACtBC,KAAK,CAAC,iDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAcX,UAAU,CAACW,QAAQ,CAACE,IAAV,CAFhC,EAGGH,IAHH,CAGQL,YAAY,CAAC,KAAD,CAHpB,EAIGS,KAJH,CAIUC,GAAD,IAASR,QAAQ,CAACQ,GAAD,CAJ1B;EAKD,CAND;;EAQA,oBACE;IAAA,UACGC,OAAO,CAACC,GAAR,CAAYlB,OAAZ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}