{"ast":null,"code":"var _jsxFileName = \"/Users/mahira/repos/memory-card/src/components/CharacterCards.js\";\nimport React from \"react\";\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardGrid(_ref) {\n  let {\n    isLoading,\n    characters\n  } = _ref;\n  let characterSet;\n  const randomNumberArray = [...Array(10)].fill().map(x => Math.ceil(Math.random() * 75) + 1);\n\n  if (characters.length > 0) {\n    characterSet = randomNumberArray.map(num => {\n      return {\n        name: characters[num].character.name,\n        image: characters[num].character.images.jpg.image_url,\n        clicked: false,\n        id: uniqid()\n      };\n    });\n  }\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-grid\",\n    children: console.log(characterSet)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = CardGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","uniqid","CardGrid","isLoading","characters","characterSet","randomNumberArray","Array","fill","map","x","Math","ceil","random","length","num","name","character","image","images","jpg","image_url","clicked","id","console","log"],"sources":["/Users/mahira/repos/memory-card/src/components/CharacterCards.js"],"sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\n\nexport default function CardGrid({ isLoading, characters }) {\n  let characterSet;\n  const randomNumberArray = [...Array(10)]\n    .fill()\n    .map((x) => Math.ceil(Math.random() * 75) + 1);\n\n  if (characters.length > 0) {\n    characterSet = randomNumberArray.map((num) => {\n      return {\n        name: characters[num].character.name,\n        image: characters[num].character.images.jpg.image_url,\n        clicked: false,\n        id: uniqid(),\n      };\n    });\n  }\n\n  return isLoading ? (\n    <h1>Loading...</h1>\n  ) : (\n    <div className=\"demo-grid\">\n      {console.log(characterSet)}\n      {/* {characterSet.map((char) => {\n        return (\n          <div key={char.id}>\n            <h4>{char.name}</h4>\n            <img src={char.image} alt=\"images\"></img>\n          </div>\n        );\n      })} */}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,QAAT,OAA6C;EAAA,IAA3B;IAAEC,SAAF;IAAaC;EAAb,CAA2B;EAC1D,IAAIC,YAAJ;EACA,MAAMC,iBAAiB,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EACvBC,IADuB,GAEvBC,GAFuB,CAElBC,CAAD,IAAOC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,EAA1B,IAAgC,CAFpB,CAA1B;;EAIA,IAAIT,UAAU,CAACU,MAAX,GAAoB,CAAxB,EAA2B;IACzBT,YAAY,GAAGC,iBAAiB,CAACG,GAAlB,CAAuBM,GAAD,IAAS;MAC5C,OAAO;QACLC,IAAI,EAAEZ,UAAU,CAACW,GAAD,CAAV,CAAgBE,SAAhB,CAA0BD,IAD3B;QAELE,KAAK,EAAEd,UAAU,CAACW,GAAD,CAAV,CAAgBE,SAAhB,CAA0BE,MAA1B,CAAiCC,GAAjC,CAAqCC,SAFvC;QAGLC,OAAO,EAAE,KAHJ;QAILC,EAAE,EAAEtB,MAAM;MAJL,CAAP;IAMD,CAPc,CAAf;EAQD;;EAED,OAAOE,SAAS,gBACd;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADc,gBAGd;IAAK,SAAS,EAAC,WAAf;IAAA,UACGqB,OAAO,CAACC,GAAR,CAAYpB,YAAZ;EADH;IAAA;IAAA;IAAA;EAAA,QAHF;AAeD;KAhCuBH,Q"},"metadata":{},"sourceType":"module"}